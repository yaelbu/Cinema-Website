@model Cinema_WebSite.ModelView.CineViewModel
@using Cinema_WebSite.Models
@{
    ViewBag.Title = "ManageMovies";

}

<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.min.js"></script>



<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Index</title>
    <style>
       
        .ui-datepicker-trigger {
            float:inherit;
            glyph-orientation-vertical:auto; 
        }

        body {
            background: url('/images/background_cine.jpg');
            background-size: 100%;
        }
        th, td {
            border: 1px solid black;
            margin-left:10px;
            text-align:center;
            
        }
        table {
            border: 1px solid black;
            width: 90%;
            margin-left: auto;
            margin-right: auto;
        }
        .field-validation-error {
            color: black;
            font-weight: bold;
            font-size:12px;
        }
  
    </style>

</head>




<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />



<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<body>

    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

    @section scripts{

        <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
        <script>
            $(function () {
                var dateToday = new Date();
                $(".datepicker").datepicker({
                    //showOn: 'both',
                    dateFormat: "dd/mm/yy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "2021:2023",
                    showOtherMonths: true,
                    selectOtherMonths: true,
                    showButtonPanel: true,
                    minDate: dateToday,
                });
            });

        </script>
    }




    <div style=" background-color: rgba(201, 150, 115, 0.8);    border-color: black;        border-style: solid;        width: 98%;        margin-left: auto;        margin-right: auto;">
        <h1 style="text-align:left">Add a Movie</h1>
        @using (Html.BeginForm("Savee", "Administrator", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()


    <div style="margin-left: 20px">



        <br />
        <i>Title :</i>
        @Html.TextBoxFor(x => x.MVMovie.Title, new { placeholder = "Title", @class = "input-box", @id = "Text1", @type = "text" })
        <br />@Html.ValidationMessageFor(x => x.MVMovie.Title, "", new { @class = "error" })
        <br />



        <i>Age Limitation :</i>
        @Html.DropDownListFor(x => x.MVMovie.Limitation_Age, new List<SelectListItem>
    {
    new SelectListItem{Text="G - General Audiences", Value="G - General Audiences"},
    new SelectListItem{Text="18 - Adults only", Value="18 - Adults only"},
    new SelectListItem{Text="16 - Over 16 years", Value="16 - Over 16 years"},
    new SelectListItem{Text="12 - Over 12 years", Value="12 - Over 12 years"},

    }, "-- Select Limit Age --")
        <br />@Html.ValidationMessageFor(x => x.MVMovie.Limitation_Age, "", new { @class = "error" })
        <br />



    


        <br />
        <i>Date Projection :</i>
        @Html.TextBoxFor(x => x.MVMovie.Date, new { placeholder = "Title", @class = "input-box", @id = "Text1", @type = "text" })
        <br />@Html.ValidationMessageFor(x => x.MVMovie.Date, "", new { @class = "error" })
        <br />


        <i>Category : </i>
        @Html.DropDownListFor(m => m.MVMovie.Category, new SelectList(Enum.GetValues(typeof(Category))), "-- Select Category --")
        <br />@Html.ValidationMessageFor(x => x.MVMovie.Category, "", new { @class = "error" })
        <br /><br />

        <i> Movie Hour : </i>
        @Html.DropDownListFor(model => model.MVMovie.BeginHourMovie, Enumerable.Range(7, 12).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), "-- Begin --")<span> to </span>@Html.DropDownListFor(model => model.MVMovie.EndHourMovie, Enumerable.Range(9, 14).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), "-- End --")
        <br />@Html.ValidationMessageFor(x => x.MVMovie.BeginHourMovie, "", new { @class = "error" })
        <br />@Html.ValidationMessageFor(x => x.MVMovie.EndHourMovie, "", new { @class = "error" })

        <br /><br />



        <i>Hall</i>
        @Html.DropDownListFor(x => x.MVMovie.Hall, (SelectList)ViewBag.Hallid, "--Select Hall--", "Hall_Name")

        <br />@Html.ValidationMessageFor(x => x.MVMovie.Hall, "", new { @class = "error" })


        <br />



        <i> Poster :</i>
        @Html.LabelFor(x => x.MVMovie.ImagePath, new { placeholder = "ImagePath" })
        <br />@Html.ValidationMessageFor(x => x.MVMovie.ImagePath, "", new { @class = "error" })

        <div>
            <input type="file" id="file" name="file" />
        </div>
        <br />
        <div style="font-size:10px">Price by default 40</div>

        <br />
        <input id="submit1" type="submit" class="sign-btn" value="Save" style="margin-bottom: 10px;border-radius: 6px; background-color:black; color:white; padding: 8px 20px;">

    </div>
        }
    </div>


    <br />
    <br />
    <br />
    <table>
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Limitation Age</th>
            <th>Price</th>
            <th>Date</th>
            <th>Movie Hours</th>
            <th>Hall</th>
            <th>Poster</th>
            <th></th>
        </tr>
        @foreach (Movie x in Model.MVMovies)
        {



    <tr>
        <td>@x.Title</td>
        <td>@x.Category</td>
        <td>@x.Limitation_Age</td>
        <td>@x.Price</td>
        <td>@x.Date</td>
        <td>@x.BeginHourMovie - @x.EndHourMovie</td>
        <td>@x.Hall</td>
        <td style="margin-top:15px"><img src="@Url.Content(x.ImagePath)" height="90" width="90" /></td>


        <td style="background-color:transparent">

            @using (Html.BeginForm("DeleteMovie", "Administrator", new { id = x.Id }))
            {
                <input type="submit" value="Delete" onclick="return confirm('Are you sure you want to delete record with ID = @x.Id');" />
            }
            @using (Html.BeginForm("UpdateMovie", "Administrator", new { id = x.Id }))
            {
                <input type="submit" value="Update" />
            }
            @using (Html.BeginForm("DetailsMovie", "Administrator", new { id = x.Id }))
            {
                <input type="submit" value="Detail" />
            }
        </td>

    </tr>


        }
    </table>
    @using (Html.BeginForm("Logout", "Administrator", FormMethod.Post))
    {
        <input id="Submit1" type="submit" value="Log out" />
    }


</body>
</html>
