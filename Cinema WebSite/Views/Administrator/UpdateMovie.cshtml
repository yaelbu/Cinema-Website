@model Cinema_WebSite.ModelView.CineViewModel
@using Cinema_WebSite.Models
@{
    ViewBag.Title = "UpdateMovies";

}
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.min.js"></script>



<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Index</title>
    <style>

        .ui-datepicker-trigger {
            float: inherit;
            glyph-orientation-vertical: auto;
        }

        body {
            background: url('/images/background_cine.jpg');
            background-size: 100%;
        }
    </style>

</head>




<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />



<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<body>

    <h1>Update movie</h1>

    @using (Html.BeginForm("SaveUpdateMovie", "Administrator", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Movie Update</h4>
            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MVMovie.Id)

            <div>
                <i>Title :</i>
                @Html.TextBoxFor(x => x.MVMovie.Title, new { placeholder = "Title", @class = "input-box", @id = "Text1", @type = "text" })
                <br />@Html.ValidationMessageFor(x => x.MVMovie.Title, "", new { @class = "error" })
                <br />



                <i>Age Limitation :</i>
                @Html.DropDownListFor(x => x.MVMovie.Limitation_Age, new List<SelectListItem>
                    {
                    new SelectListItem{Text="G - General Audiences", Value="1"},
                    new SelectListItem{Text="18 - Adults only", Value="2"},
                    new SelectListItem{Text="16 - Over 16 years", Value="3"},
                    new SelectListItem{Text="12 - Over 12 yers", Value="4"},

                    })
                <br />@Html.ValidationMessageFor(x => x.MVMovie.Limitation_Age, "", new { @class = "error" })
                <br />


                <i>Date projection :</i>
                @Html.EditorFor(x => x.MVMovie.Date, new { htmlAttributes = new { @readonly = "true", @class = "form-control datepicker" } })
                <br />

                <i>Category : </i>
                @Html.DropDownListFor(m => m.MVMovie.Category, new SelectList(Enum.GetValues(typeof(Category))), "Select Category")
                <br /><br />

                <i> Movie Hour : </i>
                @Html.DropDownListFor(model => model.MVMovie.BeginHourMovie, Enumerable.Range(7, 12).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))<span> to </span>@Html.DropDownListFor(model => model.MVMovie.EndHourMovie, Enumerable.Range(9, 14).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))
                <br /><br />

                <i>Hall :</i>
                @Html.DropDownListFor(model => model.MVMovie.Hall, new SelectList(Enum.GetValues(typeof(Halls))), "Hall")
                <br />



                <i> Poster :</i>
                @Html.LabelFor(x => x.MVMovie.ImagePath, new { placeholder = "ImagePath" })
                <div>
                    <input type="file" id="file" name="file" />
                </div>
                <br />

            </div>
        </div>
        <input id="submit1" type="submit" class="sign-btn" value="Save Changement">

        using (Html.BeginForm("BackManageMovies", "Administrator", FormMethod.Post))
        {
            <input id="submit1" type="submit" class="sign-btn" value="Back Manage Movies">

        }
    }

    </body>
</html>




